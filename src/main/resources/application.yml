# Spring Configuration
spring:
  application:
    name: issuer-api
  main:
    web-application-type: reactive
  r2dbc:
    url: "r2dbc:postgresql://localhost:5435/issuer"
    username: "postgres"
    password: "postgres"
    generate-unique-name: true
  flyway:
    url: "jdbc:postgresql://localhost:5435/issuer"
    locations: classpath:db/migration
  mail:
    host:
    port:
    username:
    password:
    properties.mail.smtp:
      auth:
      starttls.enable:
      ssl.trust:


# Spring Logging Configuration
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    org.springframework.security: INFO
    es.in2.issuer: INFO
    root: DEBUG

# Spring Management Configuration - Actuator
management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, loggers, metrics, prometheus
      base-path: /
      path-mapping:
        health: health
        info: info
        loggers: loggers
        metrics: metrics
        prometheus: prometheus
  endpoint:
    health:
      enabled: true
      show-details: always
    loggers:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true

# SpringDoc Configuration - OpenAPI 3.0 Documentation & Swagger UI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method

# Server Configuration
server:
  port: 8080

# Application Configuration
openapi:
  server:
    url: "https://localhost:8081"
    description: "Server Description"
  info:
    title: "Issuer API"
    version: "0.0.1-SNAPSHOT"
    description: "Issuer API Web Server"
    termsOfService: "https://example.com/terms-of-service"
    license:
      name: "Apache 2.0"
      url: "https://www.apache.org/licenses/LICENSE-2.0.html"
    contact:
      email: "test@example.com"
      name: "Test Name"
      url: "https://example.com"

api:
  external-domain: "http://localhost:8081"
  internal-domain: "http://localhost:8081"
  config-source:  yaml
  cache_lifetime:
    credential_offer: 10
    verifiable_credential: 10

issuer-ui:
  external-domain: "http://localhost:4201"
  internal-domain: "http://localhost:4201"

azure:
  endpoint: "https://myappconfig.azconfig.io"
  label:
    global: "issuer-api"

auth-server:
  provider: keycloak
  external-domain: "http://localhost:7002"
  internal-domain: "http://localhost:7002"
  realm: wallet
  paths:
    issuer-did: "did:key:z6MkqmaCT2JqdUtLeKah7tEVfNXtDXtQyj4yxEgV11Y5CqUa"
    jwt-decoder-path: "/realms/${auth-server.realm}/protocol/openid-connect/certs"
    jwt-decoder-local-path: "/realms/${auth-server.realm}"
    jwt-validator-path: "/realms/${auth-server.realm}"
    pre-authorized-code-path: "/realms/${auth-server.realm}/verifiable-credential/${auth-server.paths.issuer-did}/credential-offer"
    token-path: "/realms/${auth-server.realm}/protocol/openid-connect/token"
    nonce-validation-path: "/realms/${auth-server.realm}/verifiable-credential/nonce-valid"
  client:
    client-id: "oidc4vci-wallet-client"
    username: "user"
    password: "user"

default-signer:
  common-name: "ZEUS OLIMPOS"
  country: "EU"
  email: "domesupport@in2.es"
  organization-identifier: "VATEU-B99999999"
  organization: "IN2"
  serial-number: "IDCEU-99999999P"

verifier:
  external-domain: "http://localhost:9000"

issuer-identity:
  credential-subject-did-key: "did:key:zDnaezLhSFWRZ1zrYQRwLxV8nDWmb2REHoUf7N3qvna1TFina"
  jwt-credential: "."
  crypto:
    private-key: "83bd452e1e9536d244d9a440edd282d96738d9409b9168204377b5e1bba40329"
  client-assertion:
    expiration: "2"
    expiration-unit-time: "MINUTES"

remote-signature:
  domain: "http://localhost:8082"
  paths:
    sign-path: "/signature/sign"


knowledge-base:
  upload-certification-guide-url: "https://knowledgebase.dome-marketplace-prd.org"
  wallet-url: "https://knowledgebase.dome-marketplace-prd.org/books/dome-digital-wallet-user-guide"

trust-framework:
  url: "http://localhost:8080"

cors:
  default-allowed-origins:
    - "http://localhost:4200"
  external-allowed-origins:
    - "http://localhost:4200"
    - "http://localhost:4201"

hashicorp:
  vault:
    path: /kv
    host: localhost
    port: 8004
    scheme: http
    token: 