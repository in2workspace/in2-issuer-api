# Spring Configuration
spring:
  application:
    # Defines the name of the Spring application
    name: in2-issuer-backend
  main:
    # Specifies that this is a reactive application (Spring WebFlux)
    web-application-type: reactive
  r2dbc:
    # The database connection URL for R2DBC (REQUIRED)
    url:
    # The database username for R2DBC connections (REQUIRED)
    username:
    # The database password for R2DBC connections (REQUIRED)
    password:
  flyway:
    # The JDBC URL used by Flyway for database schema migrations (REQUIRED)
    url:
    # Defines the path where Flyway should look for SQL migration scripts
    locations: classpath:db/migration
    # Specifies the default schema in which Flyway should apply migrations (REQUIRED)
    default-schema:
  mail:
    # The mail server host (REQUIRED)
    host:
    # The mail server port (REQUIRED)
    port:
    # The mail server username (REQUIRED)
    username:
    # The mail server password (REQUIRED)
    password:
    properties.mail.smtp:
      # Specifies if the mail server requires authentication before sending emails (OPTIONAL) by default is true
      auth: true
      # Specifies if the mail server requires a secure connection TLS (OPTIONAL) by default is true
      starttls.enable: true
      # Specifies the trusted mail server that will be used to send the emails (REQUIRED)
      ssl.trust:

# Spring Logging Configuration
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    # Sets logging level for the custom package "org.springframework.security" (OPTIONAL)
    org.springframework.security: INFO
    # Sets logging level for the custom package "es.in2.issuer" (OPTIONAL)
    es.in2.issuer: INFO
    # Para ver en detalle el DispatcherServlet
    org.springframework.web.servlet.DispatcherServlet: TRACE
    # Para rastrear el mapeo de URLs a m√©todos @RequestMapping
    org.springframework.web.servlet.handler.RequestMappingHandlerMapping: TRACE

# Spring Management Configuration - Actuator
management:
  endpoints:
    # Disables all management endpoints by default
    enabled-by-default: false
    web:
      exposure:
        # Specifies the enabled management endpoints
        include: health, prometheus
      # Sets the base path for management endpoints
      base-path: /
      path-mapping:
        # Maps the health endpoint to /health
        health: health
        # Maps the Prometheus metrics endpoint to /prometheus
        prometheus: prometheus
  endpoint:
    health:
      # Enables the health endpoint
      enabled: true
      # Always show detailed health information
      show-details: always
    prometheus:
      # Enables the Prometheus metrics endpoint
      enabled: true

springdoc:
  api-docs:
    # Configures the endpoint where the OpenAPI JSON documentation is available
    path: /api-docs
  swagger-ui:
    # Configures the path to access the Swagger UI web interface
    path: /swagger-ui.html
    # Specifies how tags are sorted in the UI
    tags-sorter: alpha
    # Specifies how operations are sorted within each tag in the UI
    operations-sorter: method

server:
  # Defines the port on which the application will run
  port: 8080

# Application Configuration
openapi:
  server:
    url: "https://localhost:8080"
    description: "Server Description"
  info:
    title: "Issuer API"
    version: "0.0.1-SNAPSHOT"
    description: "Issuer API Web Server"
    termsOfService: "https://example.com/terms-of-service"
    license:
      name: "Apache 2.0"
      url: "https://www.apache.org/licenses/LICENSE-2.0.html"
    contact:
      email: "test@example.com"
      name: "Test Name"
      url: "https://example.com"

app:
  # The base URL for the API (REQUIRED)
  url:
  # The URL of the issuer frontend (REQUIRED)
  issuer-frontend-url:
  # The URL of the trust framework (REQUIRED
  trust-framework-url:
  knowledge-base:
    # The URL of the upload certification guide (REQUIRED)
    upload-certification-guide-url:
    # The URL of the wallet guide (REQUIRED)
    wallet-guide-url:
  # The URL of the verifier service used for external services (REQUIRED)
  verifier-url:
  # The configuration source for the application (OPTIONAL) by default is yaml
  config-source:  yaml

azure:
  endpoint: "https://myappconfig.azconfig.io"
  label:
    global: "in2-issuer-backend"

auth-server:
  # The provider for the authentication server (OPTIONAL) by default is keycloak
  provider: keycloak
  # The external URL of the authentication server (REQUIRED)
  external-url:
  # The internal URL of the authentication server (REQUIRED)
  internal-url:
  # The realm name used for the authentication (REQUIRED)
  realm:
  paths:
    issuer-did: "did:key:z6MkqmaCT2JqdUtLeKah7tEVfNXtDXtQyj4yxEgV11Y5CqUa"
    jwt-decoder-path: "/realms/${auth-server.realm}/protocol/openid-connect/certs"
    jwt-decoder-local-path: "/realms/${auth-server.realm}"
    jwt-validator-path: "/realms/${auth-server.realm}"
    pre-authorized-code-path: "/realms/${auth-server.realm}/verifiable-credential/${auth-server.paths.issuer-did}/credential-offer"
    token-path: "/realms/${auth-server.realm}/protocol/openid-connect/token"
    nonce-validation-path: "/realms/${auth-server.realm}/verifiable-credential/nonce-valid"
  client:
    # The client ID used for authentication (REQUIRED)
    client-id:
    # The username used for authentication (REQUIRED)
    username:
    # The password used for authentication (REQUIRED)
    password:

default-signer:
  # The common name of the default signer certificate (REQUIRED)
  common-name:
  # The country of the default signer certificate (REQUIRED)
  country:
  # The email of the default signer certificate (REQUIRED)
  email:
  # The organization identifier of the default signer certificate (REQUIRED)
  organization-identifier:
  # The organization of the default signer certificate (REQUIRED)
  organization:
  # The serial number of the default signer certificate (REQUIRED)
  serial-number:

issuer-identity:
  # The did:key from the credential subject (REQUIRED)
  credential-subject-did-key:
  # The jwt credential (REQUIRED)
  jwt-credential:
  crypto:
    # The private key that refers to the did:key (REQUIRED)
    private-key:

remote-signature:
  # The type of the remote signature service (REQUIRED)
  type:
  # The URL of the remote signature service (REQUIRED)
  url:
  paths:
    sign-path: "/signature/sign"
  # The client ID used for remote signature (REQUIRED)
  client-id:
  # The client secret used for remote signature (REQUIRED)
  client-secret:
  # The credential ID used for remote signature (REQUIRED)
  credential-id:
  # The credential password used for remote signature (REQUIRED)
  credential-password:

cors:
  # The allowed origins for CORS requests coming from the frontend issuer (REQUIRED)
  default-allowed-origins:
  # The allowed origins for CORS requests coming from the external services (REQUIRED)
  external-allowed-origins:

vault:
  hashicorp:
    url:
    token: